
----------------------------------------------------------------------------------------------------

USE THAccountsDB
GO

IF EXISTS (SELECT * FROM DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'[dbo].[GSP_MB_TaskTake]') and OBJECTPROPERTY(ID, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[GSP_MB_TaskTake]
GO

IF EXISTS (SELECT * FROM DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'[dbo].[GSP_MB_TaskInfo]') and OBJECTPROPERTY(ID, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[GSP_MB_TaskInfo]
GO

IF EXISTS (SELECT * FROM DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'[dbo].[GSP_MB_TaskStatus]') and OBJECTPROPERTY(ID, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[GSP_MB_TaskStatus]
GO

IF EXISTS (SELECT * FROM DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'[dbo].[GSP_MB_TaskReward]') and OBJECTPROPERTY(ID, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[GSP_MB_TaskReward]
GO

IF EXISTS (SELECT * FROM DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'[dbo].[GSP_MB_TaskForward]') and OBJECTPROPERTY(ID, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[GSP_MB_TaskForward]
GO

SET QUOTED_IDENTIFIER ON 
GO

SET ANSI_NULLS ON 
GO

----------------------------------------------------------------------------------------------------

-- 领取任务
CREATE PROC GSP_MB_TaskTake
	@dwUserID INT								-- 用户 I D
WITH ENCRYPTION AS

-- 属性设置
SET NOCOUNT ON

-- 执行逻辑
BEGIN

	-- 查询用户
	DECLARE @MemberOrder INT
	SELECT @MemberOrder=MemberOrder FROM AccountsInfo WHERE UserID=@dwUserID
	IF @MemberOrder IS NULL
	BEGIN
		RETURN 0
	END

	-- 超时处理
	UPDATE AccountsTask SET TaskStatus=2 WHERE UserID=@dwUserID AND TaskStatus=0 AND TimeLimit<DateDiff(s,InputDate,GetDate())

	-- 变量定义
	DECLARE @temp TABLE
	(
		TaskID INT
	)
	DECLARE @wTaskID AS INT

	-- 写入数据
	INSERT INTO @temp (TaskID) SELECT TaskID FROM THPlatformDBLink.THPlatformDB.dbo.TaskInfo ORDER BY TaskID

	-- 遍历数据
	WHILE EXISTS(SELECT TaskID FROM @temp)
	BEGIN
		SET ROWCOUNT 1
		SELECT @wTaskID=TaskID FROM @temp

		-- 领取任务
		IF NOT EXISTS(SELECT * FROM AccountsTask WHERE UserID=@dwUserID AND TaskID=@wTaskID AND DateDiff(d,InputDate,GetDate())=0)
		BEGIN
			-- 任务对象
			DECLARE @KindID INT
			DECLARE @UserType INT
			DECLARE @TimeLimit INT
			DECLARE @TaskType INT
			DECLARE @TaskObject INT
			SELECT @KindID=KindID,@UserType=UserType,@TimeLimit=TimeLimit,@TaskType=TaskType,@TaskObject=Innings
			FROM THPlatformDBLink.THPlatformDB.dbo.TaskInfo WHERE TaskID=@wTaskID
			IF @KindID IS NULL CONTINUE

			-- 普通玩家
			IF @MemberOrder=0 AND (@UserType&0x01)=0 CONTINUE

			-- 会员玩家
			IF @MemberOrder>0 AND (@UserType&0x02)=0 CONTINUE

			-- 插入任务
			INSERT AccountsTask (UserID,TaskID,TaskType,TaskObject,KindID,TimeLimit) 
			VALUES (@dwUserID,@wTaskID,@TaskType,@TaskObject,@KindID,@TimeLimit)
		END
		
		SET ROWCOUNT 0

		DELETE FROM @temp WHERE TaskID=@wTaskID;
	END

END

RETURN 0

GO

----------------------------------------------------------------------------------------------------

-- 任务信息
CREATE PROC GSP_MB_TaskInfo
	@dwUserID INT,								-- 用户 I D
	@strPassword NCHAR(32),						-- 用户密码
	@strClientIP NVARCHAR(15),					-- 连接地址
	@strMachineID NVARCHAR(32),					-- 机器标识
	@strErrorDescribe NVARCHAR(127) OUTPUT		-- 输出信息
WITH ENCRYPTION AS

-- 属性设置
SET NOCOUNT ON

-- 执行逻辑
BEGIN

	-- 查询用户
	IF NOT EXISTS(SELECT * FROM AccountsInfo WHERE UserID=@dwUserID AND LogonPass=@strPassword)
	BEGIN
		SET @strErrorDescribe = N'抱歉，你的用户信息不存在或者密码不正确！'
		RETURN 1
	END

	-- 超时处理
	UPDATE AccountsTask SET TaskStatus=2 WHERE UserID=@dwUserID AND TaskStatus=0 AND TimeLimit<DateDiff(s,InputDate,GetDate())

	declare @isUse int
	select @isUse=isUse  FROM [THPlatformDB].[dbo].[SelectPlatform](nolock) where ID = 1
	if @isUse is null set @isUse = 0

	-- 查询任务
	SELECT A.Progress, A.TaskStatus, B.TaskID, B.KindID, B.TaskName, B.TaskDescription, B.Innings, B.GoodsID, B.GoodsCount
	FROM AccountsTask A, THPlatformDBLink.THPlatformDB.dbo.TaskInfo B
	WHERE A.UserID=@dwUserID AND DateDiff(d,A.InputDate,GetDate())=0 AND A.TaskID = B.TaskID and B.[isUse] = @isUse

END

RETURN 0

GO

----------------------------------------------------------------------------------------------------

-- 任务状态
CREATE PROC GSP_MB_TaskStatus
	@dwUserID INT,								-- 用户 I D
	@strPassword NCHAR(32),						-- 用户密码
	@strClientIP NVARCHAR(15),					-- 连接地址
	@strMachineID NVARCHAR(32),					-- 机器标识
	@strErrorDescribe NVARCHAR(127) OUTPUT		-- 输出信息
WITH ENCRYPTION AS

-- 属性设置
SET NOCOUNT ON

-- 执行逻辑
BEGIN
	
	-- 查询用户
	IF NOT EXISTS(SELECT * FROM AccountsInfo WHERE UserID=@dwUserID AND LogonPass=@strPassword)
	BEGIN
		SET @strErrorDescribe = N'抱歉，你的用户信息不存在或者密码不正确！'
		RETURN 1
	END

	-- 超时处理
	UPDATE AccountsTask SET TaskStatus=2 WHERE UserID=@dwUserID AND TaskStatus=0 AND TimeLimit<DateDiff(s,InputDate,GetDate())

	-- 首充处理
	UPDATE AccountsTask SET TaskStatus=1 WHERE UserID=@dwUserID AND TaskID=6 AND TaskStatus=0 AND EXISTS(SELECT TOP 1 1 FROM THTreasureDB.dbo.ShareDetailInfo WHERE UserID=@dwUserID AND PayAmount=3)

	-- 查询任务
	SELECT TaskID, TaskStatus, Progress FROM AccountsTask WHERE UserID=@dwUserID AND DateDiff(d,InputDate,GetDate())=0
END

RETURN 0

GO

----------------------------------------------------------------------------------------------------

-- 任务奖励
CREATE PROC GSP_MB_TaskReward
	@wTaskID  INT,								-- 任务 I D
	@dwUserID INT,								-- 用户 I D
	@strPassword NCHAR(32),						-- 用户密码
	@strClientIP NVARCHAR(15),					-- 连接地址
	@strMachineID NVARCHAR(32),					-- 机器标识
	@strErrorDescribe NVARCHAR(127) OUTPUT		-- 输出信息
WITH ENCRYPTION AS

-- 属性设置
SET NOCOUNT ON

-- 辅助变量
DECLARE @EnjoinScore AS INT

-- 执行逻辑
BEGIN

	-- 查询用户
	DECLARE @MemberOrder INT
	SELECT @MemberOrder=MemberOrder FROM AccountsInfo WHERE UserID=@dwUserID AND LogonPass=@strPassword
	IF @MemberOrder IS NULL
	BEGIN
		SET @strErrorDescribe = N'抱歉，你的用户信息不存在或者密码不正确！'
		RETURN 1
	END

	-- 查询任务
	DECLARE @TaskInputDate DATETIME
	SELECT @TaskInputDate=InputDate FROM AccountsTask 
	WHERE UserID=@dwUserID AND TaskID=@wTaskID AND TaskStatus=1 AND DateDiff(d,InputDate,GetDate())=0
	IF @TaskInputDate IS NULL
	BEGIN
		SET @strErrorDescribe = N'请完成当前的任务再来领取奖励！'
		RETURN 2
	END
	
	declare @isUse int
	select top 1 @isUse=[isUse] from [THPlatformDB].[dbo].[SelectPlatform](nolock)
	if @isUse is null set @isUse = 0 

	-- 查询奖励
	DECLARE @GoodsID INT
	DECLARE @GoodsCount INT
	DECLARE @TaskName NVARCHAR(50)
	SELECT @TaskName=TaskName,@GoodsID=GoodsID,@GoodsCount=GoodsCount FROM THPlatformDBLink.THPlatformDB.dbo.TaskInfo WHERE TaskID=@wTaskID and isUse = @isUse

	-- 奖励判断
	IF @TaskName IS NULL OR @GoodsID IS NULL OR @GoodsCount IS NULL
	BEGIN
		SET @strErrorDescribe = N'任务奖励配置信息不存在，请联系客服！'
		RETURN 3
	END

	-- 效验地址
	SELECT @EnjoinScore=EnjoinScore FROM ConfineAddress
	WHERE AddrString=@strClientIP AND (EnjoinOverDate>GetDate() OR EnjoinOverDate IS NULL)
	IF @EnjoinScore IS NOT NULL AND @EnjoinScore<>0
	BEGIN
		SET @GoodsCount=0
	END

	-- 效验机器
	SELECT @EnjoinScore=EnjoinScore FROM ConfineMachine
	WHERE MachineSerial=@strMachineID AND (EnjoinOverDate>GetDate() OR EnjoinOverDate IS NULL)
	IF @EnjoinScore IS NOT NULL AND @EnjoinScore<>0
	BEGIN
		SET @GoodsCount=0
	END

	-- 更新机器
	UPDATE AccountsTask SET MachineSerial=@strMachineID
	WHERE UserID=@dwUserID AND TaskID=@wTaskID AND DateDiff(d,InputDate,GetDate())=0

	-- 更新物品
	if @GoodsID <> 501
	begin
		UPDATE AccountsPackage SET GoodsCount=GoodsCount+@GoodsCount WHERE UserID=@dwUserID AND GoodsID=@GoodsID

		-- 插入物品
		IF @@ROWCOUNT=0
		BEGIN
			INSERT AccountsPackage(UserID,GoodsID,GoodsCount) VALUES (@dwUserID,@GoodsID,@GoodsCount)
		END
	end
	else 
	begin
		UPDATE THTreasureDB.dbo.GameScoreInfo SET InsureScore=InsureScore+@GoodsCount WHERE UserID=@dwUserID
	end

	-- 背包记录
	DECLARE @RecordNote AS NVARCHAR(32)
	SET @RecordNote = N'任务 ' + @TaskName + N' 获得'
	INSERT PackageRecord(UserID,RecordType,GoodsID,GoodsCount,RecordNote) VALUES (@dwUserID,2,@GoodsID,@GoodsCount,@RecordNote)

	-- 删除物品
	DELETE FROM AccountsPackage WHERE UserID=@dwUserID AND GoodsCount=0

	-- 更新状态
	UPDATE AccountsTask SET TaskStatus=3 WHERE UserID=@dwUserID AND TaskID=@wTaskID AND DateDiff(d,InputDate,GetDate())=0

	-- 任务记录
	INSERT THRecordDBLink.THRecordDB.dbo.RecordTask(DateID,UserID,TaskID,AwardGold,AwardMedal,InputDate)
	VALUES (CAST(CAST(@TaskInputDate AS FLOAT) AS INT),@dwUserID,@wTaskID,@GoodsID,@GoodsCount,GetDate())
	
	if @GoodsID = 501 INSERT PackageRecord(UserID,RecordType,GoodsID,GoodsCount) VALUES (@dwUserID,1,@GoodsID,@GoodsCount)

	-- 成功提示
	SET @strErrorDescribe = N'恭喜您，奖励领取成功！'

	-- 抛出数据
	SELECT @wTaskID AS TaskID, @GoodsID AS GoodsID, @GoodsCount AS GoodsCount
END

RETURN 0

GO

----------------------------------------------------------------------------------------------------

-- 任务推进
CREATE PROC GSP_MB_TaskForward
	@dwUserID INT,								-- 用户 I D
	@wKindID INT,								-- 游戏标识
	@wMatchID INT,								-- 比赛标识
	@lWinCount INT,								-- 赢局局数
	@lLostCount INT,							-- 输局局数
	@lDrawCount	INT								-- 和局局数
WITH ENCRYPTION AS

-- 属性设置
SET NOCOUNT ON

-- 执行逻辑
BEGIN
	-- 0x01:总赢局
	-- 0x02:总局数
	-- 0x04:首胜
	-- 0x08:主动推进
	-- 0x10:自动推进

	-- 查询任务	
	SELECT ID,TaskType,TaskObject,TimeLimit,TaskStatus,InputDate,(case 
									  when TaskType=0x01 then Progress+@lWinCount
									  when TaskType=0x02 then Progress+@lWinCount+@lLostCount+@lDrawCount
									  when TaskType=0x04 then @lWinCount
									  when TaskType=0x08 then Progress+@lWinCount
									  when TaskType=0x10 then Progress+@lWinCount
									  else Progress end) AS NewProgress
	INTO #TempTaskInfo FROM AccountsTask WHERE UserID=@dwUserID AND KindID=@wKindID AND TaskStatus=0 AND DateDiff(d,InputDate,GetDate())=0

	-- 更新状态（完成任务、首胜未胜、超时）
	UPDATE #TempTaskInfo SET TaskStatus=(case 
										 when TaskType=0x04 AND NewProgress=0 then 2
										 when TimeLimit<DateDiff(s,InputDate,GetDate()) then 2
										 when NewProgress>=TaskObject then 1
										 else 0 end)
	-- 更新物理表
	UPDATE AccountsTask SET Progress=b.NewProgress,TaskStatus=b.TaskStatus FROM #TempTaskInfo AS b WHERE AccountsTask.ID=b.ID

END

RETURN 0

GO

----------------------------------------------------------------------------------------------------